name: main
on:
  push:
    branches:
      - develop
      - feature/*
    tags:
      - 'v*'
  pull_request:
    branches:
      - main
env:
  push_to_dockerhub: true

jobs:

  getversion:
    runs-on: ubuntu-latest
    steps: 
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: 'Get Previous tag'
        id: previoustag
        uses: "WyriHaximus/github-action-get-previous-tag@v1"
        
      - name: Split version tag
        uses: xom9ikk/split@v1
        id: version
        with:
          string: ${{ steps.previoustag.outputs.tag }}
          separator: v
          limit: -1

    outputs:
      version: ${{ steps.version.outputs._1 }}

  test:
    needs: getversion
    runs-on: ubuntu-latest
    strategy:
      matrix:
        release: [ community, developer, enterprise ]
        version: [ "${{ needs.getversion.outputs.version }}" ]
        include:
          - release: lts
            version:

    steps:
      - name: Setup BATS
        uses: mig4/setup-bats@v1

      - uses: actions/checkout@v2

      - name: test test-${{ matrix.version != '' && format('{0}-{1}',matrix.version, matrix.release) || format('{0}', matrix.release) }}
        run: make test VERSION=${{ matrix.version != '' && format('{0}-{1}',matrix.version, matrix.release) || format('{0}', matrix.release) }}

  publish-images:
    needs: [ test, getversion ]
    runs-on: ubuntu-latest
    strategy:
      matrix:
        release: [ community, developer, enterprise ]
        version: [ "${{ needs.getversion.outputs.version }}" ]
        include:
          - release: lts
            version:
    if: startsWith(github.ref, 'refs/tags/v') || github.event.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v2

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          push: ${{ env.push_to_dockerhub }}
          tags: ${{ matrix.version != '' && format('mslipets/my-bloody-sonar:{0}-{1}', matrix.version, matrix.release) || '' }}, mslipets/my-bloody-sonar:${{ matrix.release }}
          build-args: FROM_TAG=${{ matrix.version != '' && format('{0}-{1}', matrix.version, matrix.release) || matrix.release }}

      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}
